version: "3.9"
services:
  postgres:
    image: postgres:13.3
    env_file:
      - env/db.env
    ports:
      - "5432:5432"
    networks:
      - database_bridge

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command:
      - redis-server --requirepass kilogram323
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  client:
    build:
      context: .
      dockerfile: client.Dockerfile
    env_file:
      - env/client.env
    networks:
      - client_bridge
    ports:
      - "3001:80"

  server:
    build:
      context: .
      dockerfile: server.Dockerfile
    env_file:
      - env/server.env
    networks:
      - database_bridge
      - server_bridge
    ports:
      - "3002:3002"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:80"
    networks:
      - client_bridge
      - server_bridge
    depends_on:
      - client
      - server

  elasticsearch:
    image: elasticsearch:7.16.1
    volumes:
      - ./repository/elk/configs/elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./docker_volumes/elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "2VFGaHd46OwL"
      discovery.type: single-node
    networks:
      - elk_bridge
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:7.16.1
    depends_on:
      - elasticsearch
    volumes:
      - ./repository/elk/configs/kibana/config.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elk_bridge
    ports:
      - "81:5601"

networks:
  client_bridge:
    driver: bridge

  server_bridge:
    driver: bridge

  database_bridge:
    driver: bridge

  elk_bridge:
    driver: bridge
